swagger: '2.0'
info: 
  title: EduAfric API Documentation
  description: API documentation for EduAfric. Each request comes with a cookie sent from the client.
  version: 1.0
  contact: 
    email: successakinyemi365@gmail.com
  license:
    name: Apache 2.0
    url: 'http://apache.org/'
host: eduafric.onrender.com
basePath: /               
schemes:
  - https

paths:
  /:
    get:
      summary: Home GET request
      description: The first request to check server
      responses:
        200:
          description: Success

  /api/student/register:
    post:
      summary: Register new student
      description: Register a student
      parameters:
        - name: body
          in: body
          required: true
          schema:
            type: object
            required:
              - email
              - name
              - country
              - displayName
              - password
              - confirmPassword
            properties:
              email:
                type: string
              name:
                type: string
              country:
                type: string
              displayName:
                type: string
              password:
                type: string
              confirmPassword:
                type: string
              allowNotifications:
                type: Boolean
              intrestedCourses:
                type: Array
              preferredLanguage:
                type: string
      responses:
        201: 
          description: Signup successful verification OTP sent to student email address
        400:
          description: User error
        500: 
          description: Server error

  /api/student/login:
    post:
      summary: Student Login
      description: Login a student
      parameters:
        - name: body
          in: body
          required: true
          schema:
            type: object
            required:
              - email
              - password
            properties:
              email:
                type: string
              password:
                type: string
      responses:
        200: 
          description: Signup successful but account not verified
        201: 
          description: Signup successful
        400:
          description: User error
        500: 
          description: Server error

  /api/student/forgotPassword:
    post:
      summary: Student forgot password request
      description: Student forgot password request
      parameters:
        - name: body
          in: body
          required: true
          schema:
            type: object
            required:
              - email
            properties:
              email:
                type: string
      responses:
        200: 
          description: Email sent
        400:
          description: User error
        500: 
          description: Server error

  /api/student/resetPassword/:resetToken:
    post:
      summary: Student reset password request
      description: Student reset password request
      parameters:
        - name: body
          in: body
          required: true
          schema:
            type: object
            required:
              - password
              - confirmPassword
              - resetToken (params)
            properties:
              password:
                type: string
              confirmPassword:
                type: string
      responses:
        200: 
          description: Password Reset successful
        400:
          description: User error
        500: 
          description: Server error

  /api/student/newPaymentCard:
    post:
      summary: Student add a new payment card
      description: Student add a new payment card
      parameters:
        - name: body
          in: body
          required: true
          schema:
            type: object
            required:
              - cardType
              - cardName
              - cardNumber
              - expiryDate
              - cvv
            properties:
              cardType:
                type: string
              cardName:
                type: string
              cardNumber:
                type: string
              expiryDate:
                type: string
              cvv:
                type: string
              defaultCard:
                type: boolean (optional)
      responses:
        200: 
          description: New Payment card added
        400:
          description: User error
        500: 
          description: Server error

  /api/student/updatePaymentCard:
    post:
      summary: Student update a payment card
      description: Student update a payment card
      parameters:
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              cardType:
                type: string
              cardName:
                type: string
              cardNumber:
                type: string
              expiryDate:
                type: string
              cvv:
                type: string
              defaultCard:
                type: boolean (optional)
      responses:
        200: 
          description: Card Details Updated Succssful
        400:
          description: User error
        500: 
          description: Server error

  /api/student/deletePaymentCard:
    post:
      summary: Student delete a payment card
      description: Student delete a payment card
      parameters:
        - name: body
          in: body
          required: true
          schema:
            type: object
            required:
              - _id
            properties:
              _id:
                type: string
      responses:
        200: 
          description: Card deleted successfully
        400:
          description: User error
        500: 
          description: Server error

  /api/student/updateProfile:
    post:
      summary: Student update account profile
      description: Student update account profile
      parameters:
        - name: body
          in: body
          schema:
            type: object
            properties:
              name:
                type: string
              displayName:
                type: string
              country:
                type: string
              intrestedCourses:
                type: array
              preferredLanguage:
                type: string
              allowNotifications:
                type: boolean
      responses:
        200: 
          description: Card deleted successfully
        400:
          description: User error
        500: 
          description: Server error

  /api/instructor/register:
    post:
      summary: Register new instructor
      description: Register a instructor
      parameters:
        - name: body
          in: body
          required: true
          schema:
            type: object
            required:
              - name
              - displayName
              - password
              - confirmPassword
              - email
              - preferredLanguage,
            properties:
              name:
                type: string
              displayName:
                type: string
              password:
                type: string
              confirmPassword:
                type: string
              email:
                type: string
              preferredLanguage:
                type: string
              country:
                type: string
      responses:
        201: 
          description: Signup successful verification OTP sent to instructor email address
        400:
          description: User error
        500: 
          description: Server error

  /api/instructor/login:
    post:
      summary: Instructor Login
      description: Login a instructor
      parameters:
        - name: body
          in: body
          required: true
          schema:
            type: object
            required:
              - email
              - password
            properties:
              email:
                type: string
              password:
                type: string
      responses:
        200: 
          description: Signup successful but account not verified
        201: 
          description: Signup successful
        400:
          description: User error
        500: 
          description: Server error

  /api/instructor/forgotPassword:
    post:
      summary: Instructor forgot password request
      description: Instructor forgot password request
      parameters:
        - name: body
          in: body
          required: true
          schema:
            type: object
            required:
              - email
            properties:
              email:
                type: string
      responses:
        200: 
          description: Email sent
        400:
          description: User error
        500: 
          description: Server error

  /api/instructor/resetPassword/:resetToken:
    post:
      summary: Instructor reset password request
      description: Instructor reset password request
      parameters:
        - name: body
          in: body
          required: true
          schema:
            type: object
            required:
              - password
              - confirmPassword
              - resetToken (params)
            properties:
              password:
                type: string
              confirmPassword:
                type: string
      responses:
        200: 
          description: Password Reset successful
        400:
          description: User error
        500: 
          description: Server error

  /api/student/updateProfile:
    post:
      summary: Student update account profile
      description: Student update account profile
      parameters:
        - name: body
          in: body
          schema:
            type: object
            properties:
              name:
                type: string
              displayName:
                type: string
              country:
                type: string
              preferredLanguage:
                type: string
              allowNotifications:
                type: boolean
      responses:
        200: 
          description: Card deleted successfully
        400:
          description: User error
        500: 
          description: Server error

  /api/organization/register:
    post:
      summary: Register new organization
      description: Register a organization
      parameters:
        - name: body
          in: body
          required: true
          schema:
            type: object
            required:
              - email
              - name
              - organisationName
              - password
              - confirmPassword
            properties:
              email:
                type: string
              name:
                type: string
              organisationName:
                type: string
              password:
                type: string
              confirmPassword:
                type: string
      responses:
        201: 
          description: Signup successful verification OTP sent to organization's email address
        400:
          description: User error
        500: 
          description: Server error

  /api/organization/login:
    post:
      summary: Organization Login
      description: Login a organization
      parameters:
        - name: body
          in: body
          required: true
          schema:
            type: object
            required:
              - email
              - password
            properties:
              email:
                type: string
              password:
                type: string
      responses:
        200: 
          description: Signup successful but account not verified
        201: 
          description: Signup successful
        400:
          description: User error
        500: 
          description: Server error

  /api/auth/verifyOtp:
    post:
      summary: Verify User account with OTP
      description: Verify User account
      parameters:
        - name: body
          in: body
          required: true
          schema:
            type: object
            required:
              - otp
            properties:
              otp:
                type: string
      responses:
        200: 
          description: OTP verified Account acitvated
        400:
          description: User error
        500: 
          description: Server error
  
  /api/aiChat/aiChat:
    post:
      summary: Chat With AI Zara (AI conversation bot)
      description: Zara EduAfric AI assistant
      parameters:
        - name: body
          in: body
          required: true
          schema:
            type: object
            required:
              - message
            properties:
              message:
                type: string
      responses:
        200: 
          description: AI response
        400:
          description: User error
        500: 
          description: Server error
  
  /api/course/newCourse:
    post:
      summary: Endpoint to create new course details by instructors
      description: token is required 
      parameters:
        - name: body
          in: body
          required: true
          schema:
            type: object
            required:
              - title
              - about 
              - desc 
              - overview 
              - category 
              - price 
              - priceCurrency
              - isDiscountAllowed 
              - discountPercentage 
              - coverImage 
              - studentLevel enum [ 'Beginner', 'Intermediate', 'Advanced']
              - skillsToGain 
              - language
            properties:
              title:
                type: string (required)
              about:
                type: string (required)
              desc:
                type: string (optional)
              overview:
                type: string (required)
              category:
                type: array (required at least one)
              price:
                type: number (required)
              price:
                type: string
              isDiscountAllowed:
                type: boolean (optional)
              discountPercentage:
                type: number (optional)
              coverImage:
                type: file (required)
              studentLevel:
                type: string (required, ['Beginner', 'Intermediate', 'Advanced'])
              skillsToGain:
                type: array (required at least one)
              language:
                type: string (required)
      responses:
        201: 
          description: Cousre created successfull
        400:
          description: User error
        500: 
          description: Server error
  
  /api/course/updateCourse:
    post:
      summary: Endpoint to update a course details by instructors
      description: token is required 
      parameters:
        - name: body
          in: body
          required: true
          schema:
            type: object
            required:
              - title
              - about 
              - desc 
              - overview 
              - category 
              - price 
              - isDiscountAllowed 
              - discountPercentage 
              - coverImage 
              - studentLevel 
              - skillsToGain 
              - language
            properties:
              title:
                type: string
              about:
                type: string
              desc:
                type: string
              overview:
                type: string
              category:
                type: array
              price:
                type: number
              isDiscountAllowed:
                type: boolean
              discountPercentage:
                type: number
              coverImage:
                type: file
              studentLevel:
                type: string (['Beginner', 'Intermediate', 'Advanced'])
              skillsToGain:
                type: array
              language:
                type: string
      responses:
        200: 
          description: Cousre updated successfull
        400:
          description: User error
        500: 
          description: Server error

  /api/course/getAllCourse:
    get:
      summary: Fetch all courses from database
      description: Fetch all courses from database
      responses:
        200: 
          description: successful 
        400:
          description: User error
        500: 
          description: Server error

  /api/course/getPopularCourse:
    get:
      summary: Fetch popular courses from database
      description: Fetch popular courses from database
      responses:
        200: 
          description: successful 
        400:
          description: User error
        500: 
          description: Server error

  /api/course/getAllCourseCategories:
    get:
      summary: Fetch all courses categories from database
      description: Fetch all courses categories from database
      responses:
        200: 
          description: successful 
        400:
          description: User error
        500: 
          description: Server error

  /api/course/getCourseByCategory/:category:
    get:
      summary: Fetch all courses by categories from database
      description: Fetch all courses by categories from database
      responses:
        200: 
          description: successful 
        400:
          description: User error
        500: 
          description: Server error

  /api/course/getCourse/:_id:
    get:
      summary: Fetch single course by Id from database
      description: Fetch single course by Id from database
      responses:
        200: 
          description: successful 
        400:
          description: User error
        500: 
          description: Server error

  /api/course/rateACourse:
    post:
      summary: Give ratings to a course
      description: Give ratings to a course made by instructors
      parameters:
        - name: body
          in: body
          required: true
          schema:
            type: object
            required:
              - _id
              - rateNumber
            properties:
              _id:
                type: string
              comment:
                type: string
              rateNumber:
                type: number
      responses:
        200: 
          description: successful 
        400:
          description: User error
        500: 
          description: Server error

  /api/course/flagCourse:
    post:
      summary: Flag a blog by admin
      description: Flag a blog by admin _id of course is required
      parameters:
        - name: body
          in: body
          required: true
          schema:
            type: object
            required:
              - _id
            properties:
              _id:
                type: string
      responses:
        201: 
          description: successful 
        400:
          description: User error
        500: 
          description: Server error

  /api/course/unFlagCourse:
    post:
      summary: Unflag a blog by admin
      description: Unflag a blog by admin _id of course is required
      parameters:
        - name: body
          in: body
          required: true
          schema:
            type: object
            required:
              - _id
            properties:
              _id:
                type: string
      responses:
        201: 
          description: successful 
        400:
          description: User error
        500: 
          description: Server error

  /api/course/reportCourse:
    post:
      summary: Report a course by students
      description: Send report of a course to admin
      parameters:
        - name: body
          in: body
          required: true
          schema:
            type: object
            required:
              - message
            properties:
              message:
                type: string
      responses:
        201: 
          description: successful 
        400:
          description: User error
        500: 
          description: Server error

  /api/student/getStudentAllCourse:
    get:
      summary: Gets all registered courses of a student
      description: Gets all registered courses of a student
      responses:
        200: 
          description: successful 
        400:
          description: User error
        500: 
          description: Server error

  /api/student/setLearningReminder:
    post:
      summary: Student set a learning
      description: Student set a learning reminder for learing
      parameters:
        - name: body
          in: body
          required: true
          schema:
            type: object
            required:
              - day
              - time
            properties:
              day:
                type: string
              time:
                type: string
      responses:
        201: 
          description: Learning reminder added successfully 
        400:
          description: User error
        500: 
          description: Server error

  /api/student/deleteLearningReminder:
    post:
      summary: Student delete a learning
      description: Student delete a learning reminder for learing
      parameters:
        - name: body
          in: body
          required: true
          schema:
            type: object
            required:
              - _id
            properties:
              _id:
                type: string
      responses:
        201: 
          description: Reminder deleted successfully
        400:
          description: User error
        500: 
          description: Server error
